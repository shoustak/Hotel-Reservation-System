/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel;

import static hotel.NewRes.con;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ROEI
 */
public class CheckOut extends javax.swing.JFrame {

    static int totaleft;
    String idToDelete;

    public CheckOut() throws ClassNotFoundException {
        initComponents();
        fillPaymentTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cvc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        yearexpire = new javax.swing.JComboBox<>();
        monthexpire = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        creditnum = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        cashAmount = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        totaltopay = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        paymentleft = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        incredit = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        searchfiled = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        paymenttable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        back = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(827, 640));
        setMinimumSize(new java.awt.Dimension(827, 640));
        setPreferredSize(new java.awt.Dimension(890, 690));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("CVC:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(310, 482, 40, 20);

        cvc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cvcActionPerformed(evt);
            }
        });
        getContentPane().add(cvc);
        cvc.setBounds(350, 480, 130, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Credit Number:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(250, 412, 130, 20);

        yearexpire.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031" }));
        getContentPane().add(yearexpire);
        yearexpire.setBounds(410, 450, 70, 20);

        monthexpire.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        getContentPane().add(monthexpire);
        monthexpire.setBounds(350, 450, 50, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Expire on:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(280, 449, 70, 20);

        creditnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditnumActionPerformed(evt);
            }
        });
        getContentPane().add(creditnum);
        creditnum.setBounds(350, 410, 170, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(240, 520, 600, 10);

        cashAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cashAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cashAmountFocusLost(evt);
            }
        });
        cashAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashAmountActionPerformed(evt);
            }
        });
        getContentPane().add(cashAmount);
        cashAmount.setBounds(660, 450, 160, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Cash Amount:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(560, 453, 130, 20);

        totaltopay.setEditable(false);
        totaltopay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        totaltopay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totaltopayActionPerformed(evt);
            }
        });
        getContentPane().add(totaltopay);
        totaltopay.setBounds(350, 360, 170, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Total Payment:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(240, 360, 180, 30);

        paymentleft.setEditable(false);
        paymentleft.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        paymentleft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentleftActionPerformed(evt);
            }
        });
        getContentPane().add(paymentleft);
        paymentleft.setBounds(520, 530, 160, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Payment left:");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(410, 534, 110, 20);

        incredit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                increditFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                increditFocusLost(evt);
            }
        });
        incredit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increditActionPerformed(evt);
            }
        });
        incredit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                increditKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                increditKeyTyped(evt);
            }
        });
        getContentPane().add(incredit);
        incredit.setBounds(660, 410, 160, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Charge Credit for:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(540, 412, 110, 20);

        jButton2.setText("Reset Form");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(560, 570, 140, 40);

        jButton1.setText("Pay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(400, 570, 140, 40);

        searchfiled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchfiledFocusLost(evt);
            }
        });
        searchfiled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchfiledActionPerformed(evt);
            }
        });
        searchfiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchfiledKeyReleased(evt);
            }
        });
        getContentPane().add(searchfiled);
        searchfiled.setBounds(600, 360, 220, 30);

        paymenttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "ID/Passport", "Total Days", "Payment"
            }
        ));
        paymenttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymenttableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(paymenttable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(260, 100, 560, 250);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Check Out");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(470, 50, 130, 50);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Search:");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(540, 365, 230, 20);

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/check out.png"))); // NOI18N
        back.setText("jLabel6");
        getContentPane().add(back);
        back.setBounds(0, 0, 890, 668);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cvcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cvcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cvcActionPerformed

    private void creditnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditnumActionPerformed

    private void cashAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cashAmountActionPerformed

    private void totaltopayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totaltopayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totaltopayActionPerformed

    private void paymenttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymenttableMouseClicked

        DefaultTableModel model = (DefaultTableModel) paymenttable.getModel();
        int rowSeclected = paymenttable.getSelectedRow();
        if (model.getValueAt(rowSeclected, 4) != null) {
            idToDelete = model.getValueAt(rowSeclected, 2).toString();
            totaltopay.setText(model.getValueAt(rowSeclected, 4).toString());
        } else {
            JOptionPane.showMessageDialog(null, "Undefnfied Amount");
        }

    }//GEN-LAST:event_paymenttableMouseClicked

    private void increditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_increditActionPerformed

    private void increditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_increditKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_increditKeyPressed

    private void increditKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_increditKeyTyped

    }//GEN-LAST:event_increditKeyTyped

    private void cashAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cashAmountFocusLost

        if (cashAmount.getText().isEmpty()) {
            //paymentleft.setText(totaltopay.getText());
            return;
        } else {
            if (cashAmount != null) {
                int amountInserted = Integer.parseInt(cashAmount.getText());
                int totalPay = Integer.parseInt(totaltopay.getText());
                int totalchange = totalPay - amountInserted;
                totaleft = amountInserted;
                if (paymentleft.getText().isEmpty()) {
                    paymentleft.setText(Integer.toString(totalPay - totaleft));
                } else {
                    int ifnotempty = Integer.parseInt(paymentleft.getText());
                    paymentleft.setText(Integer.toString(ifnotempty - totaleft));
                }
            }
        }

    }//GEN-LAST:event_cashAmountFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        checkIfNull();
        
        if (Integer.parseInt(paymentleft.getText()) > 0) {
            JOptionPane.showMessageDialog(null, "There is more amount for pay");
            return;
        }
        if (Integer.parseInt(paymentleft.getText()) < 0) {
            int changetocustomer = Math.abs(Integer.parseInt(paymentleft.getText()));
            JOptionPane.showMessageDialog(null, "Payment Succses! \nChange for customer: " + changetocustomer);
            resetForm();
        }

        if (Integer.parseInt(paymentleft.getText()) == 0) {
            JOptionPane.showMessageDialog(null, "Payment Succses!");
            resetForm();
        }

        PreparedStatement sttoremove = null;
        try {
            sttoremove = con.prepareStatement("DELETE FROM clients WHERE ID=" + idToDelete);
            sttoremove.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            fillPaymentTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void paymentleftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentleftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentleftActionPerformed

    private void increditFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_increditFocusLost

        if (incredit.getText().isEmpty()) {
            paymentleft.setText(totaltopay.getText());
            return;
        }

        if (!incredit.getText().isEmpty()) {
            int totalPay = Integer.parseInt(totaltopay.getText());
            int amountInserted = Integer.parseInt(incredit.getText());
            totaleft = amountInserted;
            paymentleft.setText(Integer.toString(totalPay - totaleft));
        }

    }//GEN-LAST:event_increditFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        resetForm();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void increditFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_increditFocusGained
if(searchfiled.getText().isEmpty()){

            try {
                fillPaymentTable();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
            }
}
        if (!incredit.getText().isEmpty()) {          
        int totalPay = Integer.parseInt(totaltopay.getText());
            paymentleft.setText(Integer.toString(totalPay - totaleft));
        }

    }//GEN-LAST:event_increditFocusGained

    private void cashAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cashAmountFocusGained

        if (!cashAmount.getText().isEmpty()) {
            int totalPay = Integer.parseInt(totaltopay.getText());
            paymentleft.setText(Integer.toString(totalPay - totaleft));
        }
        
    }//GEN-LAST:event_cashAmountFocusGained

    private void searchfiledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchfiledActionPerformed
if(searchfiled.getText().isEmpty()){

            try {
                fillPaymentTable();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
            }
}
    }//GEN-LAST:event_searchfiledActionPerformed

    private void searchfiledKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfiledKeyReleased

        DefaultTableModel table = (DefaultTableModel)paymenttable.getModel();
        String search = "";
        if(!searchfiled.getText().isEmpty()){
             search = searchfiled.getText().toLowerCase();
        }else if(searchfiled.getText().isEmpty()){
            try {
                fillPaymentTable();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
            }
        return;
        }
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel> (table);
        paymenttable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
   
    }//GEN-LAST:event_searchfiledKeyReleased

    private void searchfiledFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchfiledFocusLost
       if(searchfiled.getText().isEmpty()){
            try {
                fillPaymentTable();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
    }//GEN-LAST:event_searchfiledFocusLost

    private void fillPaymentTable() throws ClassNotFoundException {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:mysql://127.0.0.1:3306/clients?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=GMT";

        try {
            con = DriverManager.getConnection(url, "root", "root");
            PreparedStatement stt = con.prepareStatement("select *from clients");
            ResultSet rs = stt.executeQuery();
            DefaultTableModel tm = (DefaultTableModel) paymenttable.getModel();
            tm.setRowCount(0);

            while (rs.next()) {
                Object o[] = {rs.getString("first_name"), rs.getString("last_name"), rs.getString("ID"), rs.getString("total_days"), rs.getString("payment")};
                tm.addRow(o);
            }

        } catch (SQLException e) {
            System.err.println(e);
        }

    }

    public void resetForm() {
        cashAmount.setText(null);
        incredit.setText(null);
        paymentleft.setText(null);
        totaltopay.setText(null);
        cvc.setText(null);
        creditnum.setText(null);
        monthexpire.setSelectedIndex(0);
        yearexpire.setSelectedIndex(0);
       
            try {
                fillPaymentTable();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CheckOut().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CheckOut.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    private javax.swing.JTextField cashAmount;
    private javax.swing.JTextField creditnum;
    private javax.swing.JTextField cvc;
    private javax.swing.JTextField incredit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> monthexpire;
    private javax.swing.JTextField paymentleft;
    private javax.swing.JTable paymenttable;
    private javax.swing.JTextField searchfiled;
    private javax.swing.JTextField totaltopay;
    private javax.swing.JComboBox<String> yearexpire;
    // End of variables declaration//GEN-END:variables

    private void checkIfNull() {
        if(cashAmount.getText().isEmpty() && incredit.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Credit filed and cash filed cant be empty");
        } 
        
        
    }

}
